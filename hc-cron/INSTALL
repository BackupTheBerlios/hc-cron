$Id: INSTALL,v 1.3 2000/07/07 06:05:24 fbraun Exp $

HC-Cron INSALLATION instructions
================================

Since hc-cron is autoconfiscated now, the installation procedure should be
much easier. (Of course autoconf support is quite untested as of the time of
this writing, so there just *might* some problems left, read: cross your
thumbs that things will work at all if you have a system that is different
from mine, but then again this *is* a development version, you know? :-)

Nevertheless you might want to have a look at src/include/options.h and/or
src/cron.conf before compiling and make choices according that fit your
taste.

You don't have to create the /var/cron or /var/cron/tabs directories, since
both the daemon and the `crontab' program will do this the first time they
run if they don't exist.  You do need to have a /var, though -- just "mkdir
/var" if you don't have one, or you can "mkdir /usr/var; ln -s /usr/var /var"
if you expect your /var to have a lot of stuff in it.

After that

say:
	./configure
	make all

su and say:
	make install

Note that if I can get you to "su and say" something just by asking, you have
a very serious security problem on your system and you should look into it.

If you have been running vixie-cron before, check permission for the files
and directories that the crontab command uses because it isn't installed
SUID root any longer by default but uses some other account instead (deamon
on RedHat Systems).

No other changes are needed, everything shold continue working like before.
If you want to have some jobs be caught up according to system down-time you
shold add the appropriate flags in your crontab(s)(see man page crontab(5)).

If you are switching from other versions of cron:

Edit your /usr/lib/crontab file into little pieces -- see the CONVERSION file
for help on this.

Use the `crontab' command to install all the little pieces you just created.
Some examples (see below before trying any of these!)

	crontab -u uucp -r /usr/lib/uucp/crontab.src
	crontab -u news -r /usr/lib/news/crontab.src
	crontab -u root -r /usr/adm/crontab.src

Notes on above examples: (1) the .src files are copied at the time the
command is issued; changing the source files later will have no effect until
they are reinstalled with another `crontab -r' command.  (2) The crontab
command will affect the crontab of the person using the command unless `-u
USER' is given; `-u' only works for root.  When using most `su' commands
under most BSD's, `crontab' will still think of you as yourself even though
you may think of yourself as root -- so use `-u' liberally.  (3) the `-r'
option stands for `replace'; check the man page for crontab(1) for other
possibilities.

Kill your existing cron daemon -- do `ps aux' and look for /etc/cron.

Edit your /etc/rc or /etc/rc.local, looking for the line that starts up
/etc/cron.  Comment it out and add a line to start the new cron daemon
-- usually /usr/local/etc/cron, unless you changed it in the Makefile.

Start up this cron daemon yourself as root.  Just type /usr/local/etc/cron
(or whatever); no '&' is needed since the daemon forks itself and the
process you executed returns immediately.

ATT notes: for those people unfortunate enough to be stuck on a AT&T UNIX,
you will need the public-domain "libndir", found in the B News source and in
any comp.sources.unix archive.  You will also need to hack the code some.
